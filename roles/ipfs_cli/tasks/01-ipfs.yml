- name: download IPFS CLI to localhost
  become: false
  run_once: true
  delegate_to: localhost
  block:
    - name: create IPFS directory on localhost
      ansible.builtin.file:
        path: "{{ role_path }}/files/ipfs/{{ _ipfs_version }}/{{ _arch }}"
        state: directory
        mode: 0o755

    - name: download IPFS archive
      ansible.builtin.get_url:
        url: "{{ _ipfs_download_url }}"
        dest: "{{ role_path }}/files/ipfs/{{ _ipfs_version }}/{{ _ipfs_archive }}"
        checksum: "{{ _ipfs_checksums }}"
      register: _download_ipfs
      until: _download_ipfs is succeeded
      retries: 5
      delay: 2

    - name: extract IPFS binary
      ansible.builtin.unarchive:
        src: "{{ role_path }}/files/ipfs/{{ _ipfs_version }}/{{ _ipfs_archive }}"
        dest: "{{ role_path }}/files/ipfs/{{ _ipfs_version }}/{{ _arch }}"
        creates: "{{ role_path }}/files/ipfs/{{ _ipfs_version }}/{{ _arch }}/ipfs"
        extra_opts:
          - "--strip-components=1"
          - "kubo/ipfs"

- name: create "nox_dir"
  ansible.builtin.file:
    path: "{{ nox_dir }}"
    state: directory
    mode: 0o755

- name: propagate IPFS binary
  ansible.builtin.copy:
    src: "{{ role_path }}/files/ipfs/{{ _ipfs_version }}/{{ _arch }}/ipfs"
    dest: "{{ nox_dir }}/ipfs"
    owner: root
    group: root
    mode: 0o755
